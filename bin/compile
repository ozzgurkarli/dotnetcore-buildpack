#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

if [ "$STACK" == "cedar-14" ]; then
    echo "cedar-14 isn't supported"
    exit 1
fi

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
OUTPUT_DIR=${OUTPUT_DIR:-heroku_output}

mkdir -p $BUILD_DIR/.profile.d
cp $BP_DIR/profile/* $BUILD_DIR/.profile.d/

### Load dependencies
source $BP_DIR/lib/utils

export_env_dir "$ENV_DIR"
export NUGET_XMLDOC_MODE=${NUGET_XMLDOC_MODE:-skip}
export DOTNET_SKIP_FIRST_TIME_EXPERIENCE=${DOTNET_SKIP_FIRST_TIME_EXPERIENCE:-1}
export DOTNET_CLI_TELEMETRY_OPTOUT=${DOTNET_CLI_TELEMETRY_OPTOUT:-1}

DOTNET_SDK_VERSION=${DOTNET_SDK_VERSION:-8.0.300}
DOTNET_RUNTIME_VERSION=${DOTNET_RUNTIME_VERSION:-8.0.5}
BUILD_CONFIGURATION=${BUILD_CONFIGURATION:-Release}

info "Installing dotnet"
install_dotnet $BUILD_DIR $CACHE_DIR $DOTNET_SDK_VERSION $DOTNET_RUNTIME_VERSION

export PATH="${BUILD_DIR}/.heroku/dotnet:${PATH}"

cd $BUILD_DIR

if [ -f ${BUILD_DIR}/dotnet-tools.json ] || [ -f ${BUILD_DIR}/.config/dotnet-tools.json ]; then
    dotnet tool restore
fi

# Proje dosyalarını bulma
PROJECT_FILES=$(find ${BUILD_DIR} -maxdepth 5 -iname '*.csproj' -o -iname '*.fsproj')

if [ -z "$PROJECT_FILES" ]; then
    echo "No project files found!"
    exit 1
fi

IFS=$'\n' read -rd '' -a PROJECT_ARRAY <<<"$PROJECT_FILES"

# Program.cs içeren projeleri yayınlama
for PROJECT_FILE in "${PROJECT_ARRAY[@]}"; do
    echo "Publishing project: $PROJECT_FILE"
    
    # Yayınlama işlemi
    dotnet publish "$PROJECT_FILE" --output "${BUILD_DIR}/${OUTPUT_DIR}/$(basename "${PROJECT_FILE%.*}")" --configuration "${BUILD_CONFIGURATION}" --runtime linux-x64
done

# Sadece Program.cs içeren projeyi bulma
PROGRAM_PROJECT_FILE=""

for PROJECT_FILE in "${PROJECT_ARRAY[@]}"; do
    if [ -f "$(dirname "$PROJECT_FILE")/Program.cs" ]; then
        PROGRAM_PROJECT_FILE="$PROJECT_FILE"
        break
    fi
done

if [ -z "$PROGRAM_PROJECT_FILE" ]; then
    echo "No project with Program.cs found!"
    exit 1
fi

PROJECT_NAME=$(basename "${PROGRAM_PROJECT_FILE%.*}")
echo "Creating Procfile for project: $PROJECT_NAME"

# Procfile'ı oluştur
echo "web: cd \$HOME/${OUTPUT_DIR}/$PROJECT_NAME && ./$PROJECT_NAME" > ${BUILD_DIR}/Procfile

# Ek bilgi
ec
